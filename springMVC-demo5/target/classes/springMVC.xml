<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--    開啟掃描組件-->
    <context:component-scan base-package="com.atguigu.mvc"></context:component-scan>
    <!--    配置view resolver-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <!--        view resolver的優先級-->
        <property name="order" value="1" />
        <property name="characterEncoding" value="UTF-8" />
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--視圖前綴-->
                        <property name="prefix" value="/WEB-INF/templates/" />
                        <!-- 後綴-->
                        <property name="suffix" value=".html" />
                        <property name="templateMode" value="HTML5" />
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>

    </bean>

    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <mvc:default-servlet-handler />

    <!--    開啟MVC的註解驅動-->
    <mvc:annotation-driven />

    <!--    配置文件上傳解析器, 將上傳至server的文件封裝成MultiPartFile物件-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--    配置攔截器-->
    <mvc:interceptors>
        <ref bean="firstInterceptor" />
        <ref bean="secondInterceptor" />
        <!--  以下兩種配置方式都是對DispatcherServlet所處理的所有請求進行攔截  -->
<!--        <bean class="com.atguigu.mvc.interceptor.FirstInterceptor"></bean>-->
<!--        <ref bean="firstInterceptor" />-->
<!--        <mvc:interceptor>-->
<!--           <mvc:mapping path="/**"/>            &lt;!&ndash; 需要攔截的請求 &ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/"/>     &lt;!&ndash; 不需要攔截的請求 &ndash;&gt;-->
<!--            <ref bean="firstInterceptor" />-->
<!--        </mvc:interceptor>-->
    </mvc:interceptors>

<!--   配置異常處理器  -->
<!--
    配置異常映射attribute "exceptionMappings" 類型為properties
    key:value(controller執行過程中出現的異常:view名稱)
    tag之間直接寫遇到指定的error時, 要跳轉的view檔案名稱, 因為試圖跳轉會走已配置的thymeleaf規則
-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--&lt;!&ndash;        設置顯示exception訊息的key, 預設儲存在request scope&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->

</beans>